{"version":3,"sources":["components/PropertyCard.tsx","components/EditModal.tsx","api/index.ts","pages/PropertiesList.tsx","App.js","reportWebVitals.js","index.js"],"names":["PropertyCard","_ref","property","onEdit","onDelete","image","id","price","description","type","react_default","a","createElement","Card","sx","maxWidth","padding","CardActionArea","CardMedia","component","height","alt","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","onClick","EditModal","open","handleClose","handleSave","_useState","useState","Object","objectSpread","_useState2","slicedToArray","updatedDetails","setUpdatedDatails","Dialog","onClose","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","defaultValue","onChange","event","target","value","Number","DialogActions","_id","toString","api","axios","create","baseURL","apis","createProperty","payload","post","getAllProperties","get","updatePropertyById","put","concat","deletePropertyById","delete","getPropertyById","PropertyListContainer","styled","div","_templateObject","taggedTemplateLiteral","PropertiesList","useHistory","_useState3","_useState4","displayEditModal","setDisplayEditModal","_useState5","_useState6","properties","setProperties","fetchProperties","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","sent","data","t0","console","log","stop","apply","this","arguments","saveProperty","_ref2","_callee2","_context2","_x","_x2","useEffect","handleOnEdit","handleOnDelete","onEditSave","Fragment","length","map","components_PropertyCard","key","components_EditModal","App","react_router_dom","react_router","path","exact","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.31ea2965.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\n\ninterface PropertyCardProps {\n  property: any\n  onEdit: (id: string) => void\n  onDelete: (id: string) => void\n}\n\nconst PropertyCard = ({ property, onEdit, onDelete }: PropertyCardProps) => {\n  const { image, id, price, description, type } = property\n  return  (\n    <Card sx={{ maxWidth: '350px', padding: '24px' }}>\n      <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            height=\"140\"\n            image={image}\n            alt=\"green iguana\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {price}\n            </Typography>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              {type}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" onClick={() => onEdit(id)}>\n            Edit\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={() => onDelete(id)}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    )\n}\n\nexport default PropertyCard","import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\ninterface Property {\n  _id: any\n  type: string\n  price: number\n  description: string\n  image: string\n}\n\ninterface EditModal {\n  open: boolean\n  property: Property\n  handleClose: () => void\n  handleSave: (id: string, property: Property) => void\n}\n\nconst EditModal = ({ property, open, handleClose, handleSave }: EditModal) => {\n  const [updatedDetails, setUpdatedDatails] = useState({...property})\n  \n  const onSave = () => {\n    handleSave(property._id.toString(), updatedDetails)\n  }\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Edit Property Details</DialogTitle>\n        <DialogContent>\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"image\"\n            label=\"Enter Image Url\"\n            type=\"string\"\n            fullWidth\n            defaultValue={updatedDetails.image}\n            variant=\"standard\"\n            onChange = {(event) => {\n              setUpdatedDatails({\n                ...updatedDetails,\n                image: event.target.value\n              })\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"price\"\n            label=\"Enter Price\"\n            type=\"number\"\n            fullWidth\n            defaultValue={updatedDetails.price}\n            onChange = {(event) => {\n              setUpdatedDatails({\n                ...updatedDetails,\n                price: Number(event.target.value)\n              })\n            }}\n            variant=\"standard\"\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"type\"\n            label=\"Enter Property Type\"\n            type=\"text\"\n            fullWidth\n            defaultValue={updatedDetails.type}\n            variant=\"standard\"\n            onChange = {(event) => {\n              setUpdatedDatails({\n                ...updatedDetails,\n                type: event.target.value\n              })\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Enter Description\"\n            type=\"text\"\n            fullWidth\n            defaultValue={updatedDetails.description}\n            variant=\"standard\"\n            onChange = {(event) => {\n              setUpdatedDatails({\n                ...updatedDetails,\n                description: event.target.value\n              })\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={onSave}>Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default EditModal","import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'http://localhost:8080/api',\n})\n\nexport const createProperty = (payload: any) => api.post(`/property`, payload)\nexport const getAllProperties = () => api.get(`/properties`)\nexport const updatePropertyById = (id: string, payload: any) => api.put(`/property/${id}`, payload)\nexport const deletePropertyById = (id: string) => api.delete(`/property/${id}`)\nexport const getPropertyById = (id: string) => api.get(`/property/${id}`)\n\nconst apis = {\n    createProperty,\n    getAllProperties,\n    updatePropertyById,\n    deletePropertyById,\n    getPropertyById,\n}\n\nexport default apis","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport PropertyCard from '../components/PropertyCard'\nimport EditModal from '../components/EditModal'\nimport api from '../api'\n\nconst PropertyListContainer = styled.div`\n display: flex;\n align-self: center;\n flex-direction: column;\n height: '800px';\n width: '400px';\n justify-content: center;\n align-items: center;\n`\n\ninterface Property {\n  _id: any\n  type: string\n  price: number\n  description: string\n  image: string\n}\n\nconst PropertiesList = () => {\n    const history = useHistory()\n    const [isLoading, setIsLoading] = useState(false)\n    const [displayEditModal, setDisplayEditModal] = useState(false)\n    const [properties, setProperties] = useState([])\n\n    const fetchProperties = async () => {\n        try {\n        let res = await api.getAllProperties()\n        setProperties(res.data.data)\n        } catch(error) {\n            // TODO: display error message to user\n            console.log('error: ', error)\n        }\n    }\n\n    const saveProperty = async (id: string, payload: any) => {\n      try {\n        await api.updatePropertyById(id, payload)\n      } catch(error) {\n        // TODO: display error message to user\n        console.log('error', error)\n      }\n    }\n\n    useEffect(() => {\n        fetchProperties()\n    },[])\n\n    const handleOnEdit = (id: string) => {\n        setDisplayEditModal(true)\n    }\n\n    const handleOnDelete = () => {\n        console.log('deleting')\n    }\n\n    const onEditSave = (id: string, payload: any) => {\n        saveProperty(id, payload)\n        setDisplayEditModal(false)\n    }\n\n    return (\n        <>\n            {properties.length && properties.map((property: Property) => (\n                <>\n                    <PropertyListContainer>\n                        <PropertyCard\n                            key={property._id.toString()}\n                            property={property}\n                            onEdit={handleOnEdit}\n                            onDelete={handleOnDelete}\n                        />\n                    </PropertyListContainer>\n                    <EditModal\n                        open={displayEditModal}\n                        property={property}\n                        handleClose={() => setDisplayEditModal(false)}\n                        handleSave={onEditSave}\n                    />\n                </>\n            ))}\n        </>\n    )\n}\n\nexport default PropertiesList","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { PropertiesList } from './pages'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/properties\" exact component={PropertiesList} />\n            </Switch>\n        </Router> \n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}